import tkinter as tk
from tkinter import ttk, scrolledtext, messagebox
from translate import Translator
from gtts import gTTS
import pyperclip
from pydub import AudioSegment
from pydub.playback import play
import io
import os


# –§—É–Ω–∫—Ü–∏—è –æ–∑–≤—É—á–∫–∏ —Ç–µ–∫—Å—Ç–∞
def speak(text, lang='ru'):
    try:
        tts = gTTS(text=text, lang=lang)
        audio_data = io.BytesIO()
        tts.write_to_fp(audio_data)
        audio_data.seek(0)
        sound = AudioSegment.from_file(audio_data, format="mp3")
        play(sound)
    except Exception as e:
        messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç: {str(e)}")


# –§—É–Ω–∫—Ü–∏–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
def copy_source_text():
    text = txt.get("1.0", tk.END).strip()
    if text:
        pyperclip.copy(text)
        messagebox.showinfo("–£—Å–ø–µ—Ö", "–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!")


def copy_translated_text():
    text = txt1.get("1.0", tk.END).strip()
    if text:
        pyperclip.copy(text)
        messagebox.showinfo("–£—Å–ø–µ—Ö", "–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!")


# –§—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
def delete_source_text():
    txt.delete('1.0', tk.END)


def delete_translated_text():
    txt1.delete('1.0', tk.END)


# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
def translate_text():
    src_lang = combo.get()
    dest_lang = combo1.get()
    text_to_translate = txt.get("1.0", tk.END).strip()

    if not text_to_translate:
        messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞")
        return

    lang_codes = {
        "–†—É—Å—Å–∫–∏–π": "ru",
        "–ö–∏—Ç–∞–π—Å–∫–∏–π": "zh"
    }

    try:
        translator = Translator(from_lang=lang_codes[src_lang], to_lang=lang_codes[dest_lang])
        translation = translator.translate(text_to_translate)
        txt1.delete("1.0", tk.END)
        txt1.insert(tk.END, translation)
    except Exception as e:
        messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {str(e)}")


# –§—É–Ω–∫—Ü–∏–∏ –æ–∑–≤—É—á–∫–∏
def speak_source_text():
    text = txt.get("1.0", tk.END).strip()
    if text:
        lang = 'ru' if combo.get() == "–†—É—Å—Å–∫–∏–π" else 'zh'
        speak(text, lang)


def speak_translated_text():
    text = txt1.get("1.0", tk.END).strip()
    if text:
        lang = 'ru' if combo1.get() == "–†—É—Å—Å–∫–∏–π" else 'zh'
        speak(text, lang)


# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
root = tk.Tk()
root.geometry("640x740")
root.resizable(False, False)
root.title("–¢–µ–∫—Å—Ç–æ–°–µ—Ç—å (–í–µ—Ä—Å–∏—è 2.0)")

# –ó–∞–≥–æ–ª–æ–≤–∫–∏
heading = tk.Label(root, text="–¢–µ–∫—Å—Ç–æ–°–µ—Ç—å (–í–µ—Ä—Å–∏—è 2.0)", font=("Arial", 20, "bold"))
heading.pack(pady=10)
heading2 = tk.Label(root, text="–¶–∏—Ñ—Ä–æ–≤–æ–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ RUS-CHN", font=("Arial", 16))
heading2.pack()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π Combobox
style = ttk.Style()
style.configure('TCombobox', font=('Arial', 14))

# –í–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫ (–∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç)
frame_top = tk.Frame(root)
frame_top.pack(pady=10)

# Combobox –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞
combo = ttk.Combobox(frame_top, values=["–†—É—Å—Å–∫–∏–π", "–ö–∏—Ç–∞–π—Å–∫–∏–π"], width=20)
combo.set("–†—É—Å—Å–∫–∏–π")
combo.grid(row=0, column=0, padx=5)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
copy_btn = tk.Button(frame_top, text="‚éò", font=('Arial', 14), width=5, command=copy_source_text)
copy_btn.grid(row=0, column=1, padx=5)

delete_btn = tk.Button(frame_top, text="‚úï", font=('Arial', 14), width=5, command=delete_source_text)
delete_btn.grid(row=0, column=2, padx=5)

voice_btn = tk.Button(frame_top, text="üîä", font=('Arial', 14), width=5, command=speak_source_text)
voice_btn.grid(row=0, column=3, padx=5)

# –ü–æ–ª–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
txt = scrolledtext.ScrolledText(root, font=('Arial', 14), width=40, height=8, wrap=tk.WORD)
txt.pack(pady=10)

# –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
translate_btn = tk.Button(root, text="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏", font=('Arial', 16), bg="#4CAF50", fg="white",
                          width=30, command=translate_text)
translate_btn.pack(pady=20)

# –ù–∏–∂–Ω–∏–π –±–ª–æ–∫ (–ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç)
frame_bottom = tk.Frame(root)
frame_bottom.pack(pady=10)

# Combobox –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
combo1 = ttk.Combobox(frame_bottom, values=["–†—É—Å—Å–∫–∏–π", "–ö–∏—Ç–∞–π—Å–∫–∏–π"], width=20)
combo1.set("–ö–∏—Ç–∞–π—Å–∫–∏–π")
combo1.grid(row=0, column=0, padx=5)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
copy1_btn = tk.Button(frame_bottom, text="‚éò", font=('Arial', 14), width=5, command=copy_translated_text)
copy1_btn.grid(row=0, column=1, padx=5)

delete1_btn = tk.Button(frame_bottom, text="‚úï", font=('Arial', 14), width=5, command=delete_translated_text)
delete1_btn.grid(row=0, column=2, padx=5)

voice1_btn = tk.Button(frame_bottom, text="üîä", font=('Arial', 14), width=5, command=speak_translated_text)
voice1_btn.grid(row=0, column=3, padx=5)

# –ü–æ–ª–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
txt1 = scrolledtext.ScrolledText(root, font=('Arial', 14), width=40, height=8, wrap=tk.WORD)
txt1.pack(pady=10)

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
root.mainloop()